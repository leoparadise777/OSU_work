0.What's the best-case, worst-case, and average-case time complexities of quicksort. Briefly explain each case.

best-case:O(nlogn) worse-case:O(n^2) average-case:O(nlogn)

best & average case: h:longn, w:n => O(nlogn)

   [XXXXXXXXXXXXXXX]   O(n)  -
   [XXXXXX]x[XXXXXX}   O(n)  | 
  [XX]x[XX]x[XX]x[XX]  O(n)
           .           O(n)  O(logn)
           .            .
           .            .    |
           .            .    -


worse case: h:n, w:n => O(n^2)

  [XXXXXXXXXXXXXXX]   n 
  x[XXXXXXXXXXXXXX]   n-1 
   x[XXXXXXXXXXXXX]   n-2
    x[XXXXXXXXXXXX]   n-3 
          .            .
          .            .
          .            .
  
n+(n-1)+(n-2)....=n(n+1)/2=O(n^2)


1.What's the best-case, worst-case, and average-case time complexities? Briefly explain.

best-case:O(n) worse-case:O(n^2) average-case:O(n)

best & average case: n+(n/2)+(n/4)+(n/8).....=n(1+1/2+1/4+1/8.....)=2n => O(n)

   [XXXXXXXXXXXXXXX]  n   
   [XXXXXXX]x         n/2 
   [XXX]x             n/4
               .      .
               .      .   
               .      .
               .      .
 

worse case: h:n, w:n => O(n^2)

  [XXXXXXXXXXXXXXX]   n 
  x[XXXXXXXXXXXXXX]   n-1 
   x[XXXXXXXXXXXXX]   n-2
    x[XXXXXXXXXXXX]   n-3 
          .            .
          .            .
          .            .
  
n+(n-1)+(n-2)....=n(n+1)/2=O(n^2)


2.What are the time complexities for the operations implemented?
O(logn)


Debriefing:
1.about 2 days
2.moderate to difficult
3.50/50
4.about 90%.
5.working on SSH thing & Python (haven't use it before)